rm(list = ls())
library(ggplot2)
library(gridExtra)
library(reshape2 )
library(plyr)
library(nlme)
#library(lme4)
#library(arm)
library(lmtest)
#library(car)
library(lattice)
#library(sandwich)   
library(xtable)   
#library(vcd)   
library(foreign)
library(MASS)
#library(nloptr)
library(texreg)
library(lmerTest)
#library(pbkrtest)
#library(MCMCglmm)
#library(glmmADMB)
#library(RVAideMemoire)
library(effects)
library(multcomp)
library(boot)
library(contrast)
# alternative implementation of glmm
# install.packages("glmmADMB", repos=c("http://glmmadmb.r-forge.r-project.org/repos", getOption("repos")),type="source") 
library(glmmADMB)
#library(bbmle)
library(readxl)
library(knitr)
library(data.table)
library(optimx)
library(lubridate)
library(dplyr)
library(tidyr)
library(reshape2)
library(broom)
setwd("I:\\PublicHealth\\ChrisPaul\\TIPS-main-analysis\\Programs\\R")

source('majutils.r')




# Read in numerators. Get rid of junk we don't need and format dates
df0 <- read_excel("../../Data/Excel/numerators-2017-05-18-v.0.2.xlsm")
df0 <- df0[,-c(3:5)]
names(df0) <- tolower(names(df0))
str(attributes(df0))
df0$reference.date <- as.Date(df0$reference.date, format = "%d %B %Y")
df0$baseline.start.date <- as.Date(df0$baseline.start.date, format = "%d %B %Y")
df0$baseline.end.date <- as.Date(df0$baseline.end.date, format = "%d %B %Y")
df0$bidateofbirth <- as.Date(df0$bidateofbirth, format = "%d %B %Y")
df0 <- subset(df0, patientid != 'pid:NA')

tmp <- subset(df0, stage.of.expt == "Baseline")


# Plot count of records in each of the stages of the expt
tmp <- ddply(df0, .(site, stage.of.expt), summarise, n = length(site))
barchart(site ~ n | stage.of.expt, tmp, origin = 0)

# Now remove the records that are neither within the baseline nor treatment window.
df0 <- droplevels(subset(df0, stage.of.expt != "Exclude"))

# Count the number of strokes in the post treatment period with grouping.
post.numer <- ddply(subset(df0, stage.of.expt == "Post"), 
                    .(stage.of.expt, group, strata, quarter, site), summarise, 
                    numcases = length(patientid))
# Count the number of strokes at baseline and in the treatment period with grouping.
trt.numer <- ddply(subset(df0, stage.of.expt == "Treatment"), 
                   .(stage.of.expt, group, strata, quarter, site), summarise, 
                   numcases = length(patientid))
# For the baseline we summarise without quarter, ie we are interested in the annual number of cases
base.numer <- ddply(subset(df0, stage.of.expt == "Baseline"), 
                    .(stage.of.expt, group, strata, site), summarise, 
                    numcases = length(patientid))
# But ultimately we need to combine these data sets so we add a quarter variable set to 0
base.numer$quarter <- 0
numer <- rbind(base.numer, trt.numer, post.numer)





# Read in denominators Get rid of junk we don't need and format dates
df1 <- read_excel("../../Data/Excel/denominators-2016-10-05-v.0.1.xlsm")
names(df1) <- tolower(names(df1))
str(attributes(df1))
df1$date <- as.Date(df1$date, format = "%d %B %Y")
df1$baseline.start.date <- as.Date(df1$baseline.start.date, format = "%d %B %Y")
df1$baseline.end.date <- as.Date(df1$baseline.end.date, format = "%d %B %Y")


# Plot count of records in each of the stages of the expt
tmp <- ddply(df1, .(site, stage.of.expt), summarise, n = length(site))
barchart(site ~ n | stage.of.expt, tmp, origin = 0)

# Now remove the records that are neither within the baseline nor treatment window.
df1 <- droplevels(subset(df1, stage.of.expt != "Exclude"))

# Sum the number of strokes in the post treatment period with grouping.
post.numer <- ddply(subset(df1, stage.of.expt == "Post"), 
                    .(stage.of.expt, group, strata, quarter, site), summarise, 
                    numstrokes = sum(strokes))
# Sum the number of strokes at baseline and in the treatment period with grouping.
trt.denom <- ddply(subset(df1, stage.of.expt == "Treatment"), 
                   .(stage.of.expt, group, strata, quarter, site),  summarise, 
                   numstrokes = sum(strokes))
base.denom <- ddply(subset(df1, stage.of.expt == "Baseline"), 
                    .(stage.of.expt, group, strata, site), summarise, 
                    numstrokes = sum(strokes))
base.denom$quarter <- 0
denom <- rbind(base.denom, trt.denom, post.numer)




# Join the data sets so that we can work out rates
df2 <- merge(numer, denom, by = c("stage.of.expt", "group", "strata","quarter", "site"), all = T)
# Number of thrombolyisis cases
df2$numcases <- ifelse(is.na(df2$numcases), 0, df2$numcases)
df2$numstrokes <- ifelse(is.na(df2$numstrokes), 0, df2$numstrokes)
df2$rate <- 100 * df2$numcases / df2$numstrokes
df2$lnumstrokes <- log(df2$numstrokes)
df2$group <- factor(df2$group, labels = c("Control", "Intervention"), c(0,1))
df2$site <- as.factor(df2$site)
df2$strata <- as.factor(df2$strata)
df2$strata <- factor(df2$strata, labels = c("Strata 1", "Strata 2", "Strata 3"))
df2$stage.of.expt <- as.factor(df2$stage.of.expt)





# Verification of data date ranges and alignment with instructions

# the baseline period had 8 x 4 month blocks (32 months in total)
# the protocol paper had indicated that only 24 months baseline
# was going to be used but in the end this was extended.
# the dates ran from jan 2011 to dec 2012 and then from jan 2013
# to aug 2013 
# (although some sites do not have the numerator for all of 
#  the jan to dec 2011 period)

# the intervention period was stated to be 12 months in the protocol
# but ended up being 16 months
# sep 2013 to dec 2014

# the post intervention period wasn't even mentioned in the protocol
# but ended up being incorporated with the follow up period of 12 months.
# the actual study time was 12 months from jan to dec 2015


tmp1 <- ddply(subset(df0, stage.of.expt == "Baseline"), .(site), summarise, 
              min.bl.date = min(reference.date),
              max.bl.date = max(reference.date))
tmp1 <- melt(tmp1, id.vars = c("site"))

p <- ggplot(tmp1, aes(x = value, y = site, group = site))
p <- p + geom_point()
p <- p + geom_line()  
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2011"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2011"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2011"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2012"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2012"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2012"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2013"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2013"))), linetype=4)
p <- p + xlab("") 
p <- p + ylab("Site") 
p <- p + scale_y_continuous(breaks = seq(0, 25, by = 2))
p <- p + scale_x_date(date_breaks = "2 months")
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p

tmp1 <- ddply(subset(df1, stage.of.expt == "Baseline"), .(site), 
              summarise,min.bl.date = min(date), max.bl.date = max(date))
tmp1 <- melt(tmp1, id.vars = c("site"))
p <- ggplot(tmp1, aes(x = value, y = site, group = site))
p <- p + geom_point()
p <- p + geom_line()
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2011"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2011"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2011"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2012"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2012"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2012"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2013"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2013"))), linetype=4)
p <- p + xlab("") 
p <- p +ylab("Site") 
p <- p + scale_y_continuous(breaks = seq(0, 25, by = 2))
p <- p + scale_x_date(date_breaks = "2 months")
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p

tmp1 <- ddply(subset(df0, stage.of.expt == "Treatment"), .(site), summarise, 
              min.bl.date = min(reference.date),
              max.bl.date = max(reference.date))
tmp1 <- melt(tmp1, id.vars = c("site"))

p <- ggplot(tmp1, aes(x = value, y = site, group = site))
p <- p + geom_point()
p <- p + geom_line()
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2013"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2014"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2014"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2014"))), linetype=4)
p <- p + xlab("") 
p <- p +ylab("Site") 
p <- p + scale_y_continuous(breaks = seq(0, 25, by = 2))
p <- p + scale_x_date(date_breaks = "2 months")
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p

tmp1 <- ddply(subset(df1, stage.of.expt == "Treatment"), .(site), 
              summarise,min.bl.date = min(date), max.bl.date = max(date))
tmp1 <- melt(tmp1, id.vars = c("site"))
p <- ggplot(tmp1, aes(x = value, y = site, group = site))
p <- p + geom_point()
p <- p + geom_line()
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2013"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2014"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2014"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2014"))), linetype=4)
p <- p + xlab("") 
p <- p +ylab("Site") 
p <- p + scale_y_continuous(breaks = seq(0, 25, by = 2))
p <- p + scale_x_date(date_breaks = "2 months")
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p


tmp1 <- ddply(subset(df0, stage.of.expt == "Post"), .(site), summarise, 
              min.bl.date = min(reference.date),
              max.bl.date = max(reference.date))
tmp1 <- melt(tmp1, id.vars = c("site"))

p <- ggplot(tmp1, aes(x = value, y = site, group = site))
p <- p + geom_point()
p <- p + geom_line()
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2015"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2015"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2015"))), linetype=4)
p <- p + xlab("") 
p <- p +ylab("Site") 
p <- p + scale_y_continuous(breaks = seq(0, 25, by = 2))
p <- p + scale_x_date(date_breaks = "2 months")
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p

tmp1 <- ddply(subset(df1, stage.of.expt == "Post"), .(site), 
              summarise,min.bl.date = min(date), max.bl.date = max(date))
tmp1 <- melt(tmp1, id.vars = c("site"))
p <- ggplot(tmp1, aes(x = value, y = site, group = site))
p <- p + geom_point()
p <- p + geom_line()
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("30/4/2015"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/8/2015"))), linetype=4)
p <- p + geom_vline(xintercept = as.numeric(as.Date(dmy("31/12/2015"))), linetype=4)
p <- p + xlab("") 
p <- p +ylab("Site") 
p <- p + scale_y_continuous(breaks = seq(0, 25, by = 2))
p <- p + scale_x_date(date_breaks = "2 months")
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p




# Descriptive stats Summary (table 1) of means in LATEX format

descr::CrossTable(df0$group)
df0 %>% 
  dplyr::group_by(group) %>%
  dplyr::summarise(n = n(),
                   age = mean.sd(biage),
                   sex.f = prop.is(bigender=="F", n),
                   sex.m = prop.is(bigender=="M", n),
                   sex.na = prop.is(is.na(bigender), n))  


# Cluster level stats requested/implemented 2018-05-21
names(df0)
df.clusterstats1 <- df0 %>% 
  dplyr::mutate(stage.of.expt = factor(stage.of.expt, 
                                       levels = c("Baseline", "Treatment", "Post"))) %>%
  dplyr::group_by(stage.of.expt, site) %>%
  dplyr::summarise(n = n()) %>%
  dplyr::ungroup() 

df.clusterstats1 %>%
  dplyr::group_by(stage.of.expt) %>%
  dplyr::summarise(mean.size = mean(n, na.rm = T),
                   mean.sd = sd(n, na.rm = T))

# Include treatment group
df.clusterstats2 <- df0 %>% 
  dplyr::mutate(stage.of.expt = factor(stage.of.expt, 
                                       levels = c("Baseline", "Treatment", "Post")),
                group = factor(group, 
                               labels = c("Control", "Intervention"), 
                               levels = c(0, 1))) %>%
  dplyr::group_by(stage.of.expt, site, group) %>%
  dplyr::summarise(n = n()) %>%
  dplyr::ungroup() 
  

df.clusterstats2 %>%
  dplyr::group_by(stage.of.expt, group) %>%
  dplyr::summarise(mean.size = mean(n, na.rm = T),
                   mean.sd = sd(n, na.rm = T))

# These don't mean a lot, but Chris asked me to generate them anyway.
df.clusterstats3 <- df0 %>% 
  dplyr::group_by(site) %>%
  dplyr::summarise(n = n()) %>%
  dplyr::ungroup() 

df.clusterstats3 %>%
  dplyr::summarise(mean.size = mean(n, na.rm = T),
                   mean.sd = sd(n, na.rm = T))


df.clusterstats4 <- df0 %>% 
  dplyr::mutate(group = factor(group, 
                               labels = c("Control", "Intervention"), 
                               levels = c(0, 1))) %>%
  dplyr::group_by(site, group) %>%
  dplyr::summarise(n = n()) %>%
  dplyr::ungroup() 

df.clusterstats4 %>%
  dplyr::group_by(group) %>%
  dplyr::summarise(mean.size = mean(n, na.rm = T),
                   mean.sd = sd(n, na.rm = T))


# Baseline observed rates by group, strata and site

df3 <- droplevels(subset(df2, stage.of.expt == "Baseline", 
                         select = c("stage.of.expt","group","strata","site","rate")))
df3 <- df3[order(df3$group, decreasing = T),]
names(df3) <- c("stage.of.expt","group","strata","site","b.rate")

# For each of the four quarters within the treatment period obtain the observed rate
for (i in 9:12){
  df4 <- droplevels(subset(df2, stage.of.expt == "Treatment" & quarter == i, 
                           select = c("site","rate"))) 
  ratename <- paste0("q", i, ".rate")
  names(df4) <- c("site",ratename)  
  
  df3 <- merge(df3, df4, by = c("site"))
  rm(df4)
}

for (i in 13:15){
  df4 <- droplevels(subset(df2, stage.of.expt == "Post" & quarter == i, 
                           select = c("site","rate"))) 
  ratename <- paste0("qp", i, ".rate")
  names(df4) <- c("site",ratename)  
  
  df3 <- merge(df3, df4, by = c("site"))
  rm(df4)
}


# Reorder the columns
df3 <- df3[,c("group", "strata", "site", "b.rate", 
              "q9.rate", "q10.rate", "q11.rate", "q12.rate", 
              "qp13.rate", "qp14.rate", "qp15.rate")]
# Extract strata number
df3$strata <- as.numeric(substr(as.character(df3$strata), start = 8, stop = 8))
# Sort by group (intervention first)
df3 <- df3[order(-as.numeric(df3$group), df3$strata, df3$site),]
rownames(df3) <- NULL

#
# You need to Introduce these strata level means MANUALLY into the latex table
# in the appropriate places:
#
tmp <- ddply(df3, .(group, strata), summarise, b.rate = round(mean(b.rate),3),
             q9.rate = round(mean(q9.rate),3), q10.rate = round(mean(q10.rate),3),
             q11.rate = round(mean(q11.rate),3), q12.rate = round(mean(q12.rate),3),
             qp13.rate = round(mean(qp13.rate),3), qp14.rate = round(mean(qp14.rate),3),
             qp15.rate = round(mean(qp15.rate),3))
tmp <- tmp[order(-as.numeric(tmp$group), tmp$strata),]

# This creates a starting point and I manually fiddle around with the latex 
# from here to get the formatting as I want it.
print(xtable(df3, digits = 2), include.rownames = FALSE)

print(xtable(tmp, digits = 2), include.rownames = FALSE)

# Readable for checking:
kable(df3, digits=2)
kable(tmp, digits=2)















# Numerator and denominator table (cases/strokes)
df3.1 <- droplevels(subset(df2, stage.of.expt == "Baseline",
                           select = c("stage.of.expt","group","strata", "site", 
                                      "numcases", "numstrokes")))
df3.1t <- ddply(df3.1, .(stage.of.expt, group, strata),
                summarise, numcases = sum(numcases), numstrokes = sum(numstrokes))

df3.2 <- droplevels(subset(df2, stage.of.expt != "Baseline",
                           select = c("stage.of.expt","group","strata", "site", 
                                      "quarter", "numcases", "numstrokes")))

df3.2t <- ddply(df3.2, .(stage.of.expt, group, strata),
               summarise, numcases = sum(numcases), numstrokes = sum(numstrokes))

df3.2 <- ddply(df3.2, .(stage.of.expt, group, strata, site),
               summarise, numcases = sum(numcases), numstrokes = sum(numstrokes))


df3 <- rbind(df3.1, df3.2)
df3 <- melt(df3, id.vars = c("stage.of.expt", "group", "strata", "site"))
df3 <- dcast(df3, group + strata + site ~ stage.of.expt + variable , value.var = "value")
names(df3) <- c("group", "strata", "site", "numcases.b",
                "numstrokes.b", "numcases.p", "numstrokes.p", 
                "numcases.i", "numstrokes.i")

df3$base <- paste0(df3$numcases.b, "/", df3$numstrokes.b)
df3$int <- paste0(df3$numcases.i, "/", df3$numstrokes.i)
df3$post <- paste0(df3$numcases.p, "/", df3$numstrokes.p)

df3 <- dplyr::select(df3, group, strata, site, base, int, post)
df3$group <- relevel(df3$group, ref = "Intervention")
df3 <- df3[order(df3$group),]

# Totals 
df3t <- rbind(df3.1t, df3.2t)

df3t <- melt(df3t, id.vars = c("stage.of.expt", "group", "strata"))
df3t <- dcast(df3t, group + strata ~ stage.of.expt + variable , value.var = "value")
names(df3t) <- c("group", "strata", "numcases.b",
                "numstrokes.b", "numcases.p", "numstrokes.p", 
                "numcases.i", "numstrokes.i")
df3t$base <- paste0(df3t$numcases.b, "/", df3t$numstrokes.b)
df3t$int <- paste0(df3t$numcases.i, "/", df3t$numstrokes.i)
df3t$post <- paste0(df3t$numcases.p, "/", df3t$numstrokes.p)

df3t <- dplyr::select(df3t, group, strata, base, int, post)
df3t$group <- relevel(df3t$group, ref = "Intervention")
df3t <- df3t[order(df3t$group),]

print(xtable(df3, digits = 0), include.rownames = FALSE)
print(xtable(df3t, digits = 0), include.rownames = FALSE)

kable(df3, digits=0)
kable(tmp, digits=2)
# Plots




# From http://stackoverflow.com/questions/17414565/interpretation-of-stat-summary-mean-cl-boot-at-ggplot2
# mean_cl_boot is a very fast implementation of the basic nonparametric bootstrap 
# for obtaining confidence limits for the population mean without assuming normality
tmp <- df2
tmp$q.stage <- paste0(substr(as.character(tmp$stage.of.expt), 1, 1), tmp$quarter)
tmp$q.stage <- as.factor(tmp$q.stage)
tmp$q.stage <- factor(tmp$q.stage, 
                      labels = c("B0", "I1", "I2", "I3", "I4", "P1", "P2", "P3"),
                      levels = c("B0", "T9","T10", "T11", "T12", "P13", "P14", "P15"))


tmp2 <- ddply(tmp, .(group, stage.of.expt), 
              summarise, 
              mean = mean(rate, na.rm = T),
              mean2 = 100*sum(numcases)/sum(numstrokes))

tmp2.1 <- subset(tmp2, stage.of.expt == "Baseline")
tmp2.1$q.stage <- as.character("B0")
tmp2.2 <- subset(tmp2, stage.of.expt == "Post")
# An awesome-straightforward way to repeat rows in a dataframe.
tmp2.2 <- tmp2.2[rep(row.names(tmp2.2), each = 3), ]
tmp2.2$q.stage <- rep(as.character(c("P1", "P2", "P3")), length.out = 6)
rownames(tmp2.2) <- NULL
tmp2.3 <- subset(tmp2, stage.of.expt == "Treatment")
tmp2.3 <- tmp2.3[rep(row.names(tmp2.3), each = 4), ]
tmp2.3$q.stage <- rep(as.character(c("I1", "I2", "I3", "I4")), length.out = 8)
rownames(tmp2.3) <- NULL
tmp2 <- rbind(tmp2.1, tmp2.2, tmp2.3)


# New figure
# Replaced date 3/4/2017 by the new one below commented out section



df.ptmp <- ddply(df2, .(group, quarter), summarise, 
                 rate = compute.rate(numcases, numstrokes),
                 se = boot.se(numcases, numstrokes))

df.ptmp$q.stage <- paste0(df.ptmp$quarter)
df.ptmp$q.stage <- as.factor(df.ptmp$q.stage)
df.ptmp$q.stage <- factor(df.ptmp$q.stage, 
                      labels = c("B0", "I1", "I2", "I3", "I4", "P1", "P2", "P3"),
                      levels = c("0", "9","10", "11", "12", "13", "14", "15"))

df.ptmp$stage.of.expt <- as.factor(c("Baseline", 
                                     "Treatment", "Treatment", "Treatment", "Treatment", 
                                     "Post", "Post", "Post",
                                     "Baseline", 
                                     "Treatment", "Treatment", "Treatment", "Treatment", 
                                     "Post", "Post", "Post"))
# selection <- df.ptmp$group == "Control" & 
#   df.ptmp$quarter >8 & df.ptmp$quarter < 13
# df.fit <- data.frame(N = seq(from =9,
#                              to = 12, 
#                              length.out = 50),
#                      spline(x = df.ptmp$rate[selection], 
#                             n=50))


# df.ptmp <- ddply(df2, .(group, quarter), summarise, 
#                  rate = mean(rate))

# df.ptmp <- ddply(df2, .(group, quarter), summarise,
#                  rate = median(rate))


# Plot by group
p <- ggplot(data = tmp, aes(x = q.stage, y = rate))
#p <- p + geom_point(alpha = 0.5, size = 1)
p <- p + geom_line(aes(group = site), colour = "grey80")
#p <- p + stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 0.6, shape = 3)

p <- p + geom_point(data = subset(df.ptmp, stage.of.expt == "Baseline"),
                   aes(x = q.stage, y = rate, group = stage.of.expt),
                   shape = 95, size = 4, color = "blue1")
# 
p <- p + geom_line(data = df.ptmp, aes(x = q.stage, y = rate,
                                    group = stage.of.expt),
                   linetype = 1, color = "blue1")
# 
p <- p + geom_point(data = subset(tmp2, stage.of.expt == "Baseline"),
                   aes(x = q.stage, y = mean2, group = stage.of.expt),
                   shape = 95, size = 4, color = "red1")
p <- p + geom_line(data = tmp2, aes(x = q.stage, y = mean2,
                                    group = stage.of.expt),
                   colour = "red1", linetype = 1)
p <- p + theme_bw()
p <- p + theme(legend.position="none")
p <- p + theme(text = element_text(size=10))
p <- p + xlab("Timepoint: baseline year (B0), intervention (I1-I4) \n and post intervention (P1-P3)")
p <- p + ylab("Thrombolysis rate per 100 cases")
#p <- p + facet_wrap( ~ group, ncol=2)
p <- p + facet_grid( ~ group)
p




p <- ggplot(data = df.ptmp, 
            aes(x = q.stage, y = rate, colour = group))


p <- p + geom_line(data = subset(tmp, group == "Control"),
                   aes(x = q.stage, y = rate, group = site), 
                   colour = "#F8766D", alpha = 0.3)
p <- p + geom_line(data = subset(tmp, group == "Intervention"),
                   aes(x = q.stage, y = rate, group = site), 
                   colour = "#00BFC4", alpha = 0.3)

p <- p + geom_line(data = subset(df.ptmp, stage.of.expt == "Treatment"),
                   aes(x = q.stage, y = rate, group = group), size = 0.9)
p <- p + geom_line(data = subset(df.ptmp, stage.of.expt == "Post"),
                   aes(x = q.stage, y = rate, group = group), size = 0.9)
p <- p + geom_point(data = subset(df.ptmp, stage.of.expt == "Baseline"),
                    aes(x = q.stage, y = rate, group = group),
                    shape = 95, size = 5)
#p <- p + geom_line(aes(group = site, colour = group), alpha = 0.5)
# #p <- p + stat_summary(fun.data = "mean_cl_boot", colour = "red", size = 0.6, shape = 3)
# 
# p <- p + geom_point(data = subset(df.ptmp, stage.of.expt == "Baseline"),
#                     aes(x = q.stage, y = rate, group = stage.of.expt),
#                     shape = 95, size = 4, color = "blue1")
# # 
# p <- p + geom_line(data = df.ptmp, aes(x = q.stage, y = rate,
#                                        group = stage.of.expt),
#                    linetype = 1, color = "blue1")
# # 
# p <- p + geom_point(data = subset(tmp2, stage.of.expt == "Baseline"),
#                     aes(x = q.stage, y = mean, group = stage.of.expt),
#                     shape = 95, size = 4, color = "red1")
# p <- p + geom_line(data = tmp2, aes(x = q.stage, y = mean,
#                                     group = stage.of.expt),
#                    colour = "red1", linetype = 1)

p <- p + theme_bw()
p <- p + theme(text = element_text(size=10))
p <- p + theme(legend.title=element_blank())
p <- p + theme(legend.position="bottom")
p <- p + xlab("Timepoint: baseline year (B0), intervention (I1-I4) \n and post intervention (P1-P3)")
p <- p + ylab("Thrombolysis rate per 100 cases")
p


















# 2018-05-14 New plot for Chris.
# Use size = 10 for 640 plot
# Use size = 14 for 1063 plot


df.ptmp <- ddply(df2, .(group, quarter), summarise, 
                 rate = compute.rate(numcases, numstrokes),
                 se = boot.se(numcases, numstrokes))

df.ptmp$q.stage <- paste0(df.ptmp$quarter)
df.ptmp$q.stage <- as.factor(df.ptmp$q.stage)
df.ptmp$q.stage <- factor(df.ptmp$q.stage, 
                          labels = c("B0", "I1", "I2", "I3", "I4", "P1", "P2", "P3"),
                          levels = c("0", "9","10", "11", "12", "13", "14", "15"))

df.ptmp$stage.of.expt <- as.factor(c("Baseline", 
                                     "Treatment", "Treatment", "Treatment", "Treatment", 
                                     "Post", "Post", "Post",
                                     "Baseline", 
                                     "Treatment", "Treatment", "Treatment", "Treatment", 
                                     "Post", "Post", "Post"))


df.ptmp$time <- rep(1:8, 2)

df.ptmp <- rbind(df.ptmp, df.ptmp[c(1,9),])
df.ptmp <- df.ptmp %>%
  dplyr::arrange(group, quarter)
df.ptmp$time[1] <- 0.9
df.ptmp$time[2] <- 1.1
df.ptmp$time[10] <- 0.9
df.ptmp$time[11] <- 1.1

p <- ggplot(data = df.ptmp, 
            aes(x = time, y = rate, colour = group, shape = factor(1))) + 
  geom_line(data = subset(df.ptmp, stage.of.expt == "Treatment"),
                   aes(x = time, y = rate, group = group), size = 0.9) +
  geom_line(data = subset(df.ptmp, stage.of.expt == "Post"),
                   aes(x = time, y = rate, group = group), size = 0.9) +
  # geom_point(data = subset(df.ptmp, stage.of.expt == "Baseline"),
  #                   aes(x = q.stage, y = rate, group = group),
  #                   shape = 95, size = 5) + 
  geom_line(data = subset(df.ptmp, stage.of.expt == "Baseline"),
             aes(x = time, y = rate, group = group), size = 0.9) +
  theme_bw() + 
  theme(text = element_text(size=10,  family="serif")) + 
  theme(legend.title=element_blank()) + 
  theme(legend.position="bottom") + 
  # scale_colour_discrete(breaks=c("Control", "Intervention"),
  #                       labels=c("Control", "Intervention")) + 
  
  scale_x_continuous("Timepoint: baseline year (B0), intervention (I1-I4) \n and post intervention (P1-P3)", 
                     limits = c(0.7, 8), 
                     breaks = 1:8, 
                     labels = c("B0", "I1", "I2", "I3", "I4", "P1", "P2", "P3")) +
  scale_y_continuous("Thrombolysis rate per 100 cases", 
                            limits = c(0, 12), 
                            breaks = seq(from = 0, to = 12, by = 2)) +
  annotate("text", x = 5, y = 11, label = "*", size = 8) + 
  annotate("text", x = 6, y = 12, label = "*", size = 8) 
p

ggsave("../../Output/manuscript-fig-01.pdf", p, 
       width = 107, height = 107, units = "mm", dpi = 300)

ggsave("../../Output/manuscript-fig-01.tiff", p, 
       width = 107, height = 107, units = "mm", dpi = 300)


library(Cairo)
cairo_ps("../../Output/manuscript-fig-01.eps", family = "Times",
         width = 4.2126, height = 4.2126)
plot(p)
dev.off()


tmp2 <- ddply(tmp, .(group, stage.of.expt, strata), summarise, mean = mean(rate, na.rm = T))

tmp2.1 <- subset(tmp2, stage.of.expt == "Baseline")
tmp2.1$q.stage <- as.character("B0")
tmp2.2 <- subset(tmp2, stage.of.expt == "Post")
tmp2.2 <- tmp2.2[rep(row.names(tmp2.2), each = 3), ]
tmp2.2$q.stage <- rep(as.character(c("P1", "P2", "P3")), length.out = 18)
rownames(tmp2.2) <- NULL
tmp2.3 <- subset(tmp2, stage.of.expt == "Treatment")
tmp2.3 <- tmp2.3[rep(row.names(tmp2.3), each = 4), ]
tmp2.3$q.stage <- rep(as.character(c("I1", "I2", "I3", "I4")), length.out = 24)
rownames(tmp2.3) <- NULL
tmp2 <- rbind(tmp2.1, tmp2.2, tmp2.3)


# Plot by strata
p <- ggplot(data = tmp, aes(x = q.stage, y = rate, colour = site))
#p <- p + geom_point(alpha = 0.5, size = 1)
p <- p + geom_line(aes(group = site), alpha = 0.5)
#p <- p + geom_point(data = tmp2, aes(x = q.stage, y = mean), colour = "black")
#p <- p + geom_line(data = tmp2, aes(x = q.stage, y = mean, 
#                                    group = stage.of.expt), colour = "black")
p <- p + theme_bw()
p <- p + theme(legend.position="none")
p <- p + theme(text = element_text(size=10))
p <- p + xlab("Time-point: baseline year (B0), intervention (I1-I4) \n and post intervention (P1-P3)")
p <- p + ylab("Thrombolysis rate per 100 cases")
#p <- p + facet_wrap( ~ group, ncol=2)
p <- p + facet_grid(strata ~ group)
p




# t-test (linear regression) as per protocol adjusting for baseline value and strata covariates





# From protocol:
# The difference in post-intervention thrombolysis rates between intervention and control 
# groups will be compared via a two-stage approach to adjust for baseline thrombolysis rates, 
# using a stratified t-test. This analysis will use the whole of the baseline (24+8=32 months). 

# saveRDS(df2, 'df2.rds')

#df2 <- readRDS('I:/PublicHealth/ChrisPaul/TIPS-main-analysis/Programs/R/df2.rds')
tmp <- droplevels(subset(df2, stage.of.expt != "Treatment"))
tmp <- dplyr::select(tmp, stage.of.expt, group, strata, quarter, site, numcases, numstrokes)
tmp <- ddply(tmp, .(stage.of.expt, group, strata, site), summarise, 
             numcases = sum(numcases), numstrokes = sum(numstrokes))
tmp$rate <- tmp$numcases / tmp$numstrokes


tmp1.1 <- subset(tmp, stage.of.expt == "Baseline")
names(tmp1.1) <- c(names(tmp1.1)[1:6], 'b.rate')
tmp1.2 <- subset(tmp, stage.of.expt == "Post")

tmp <- merge(tmp1.2, dplyr::select(tmp1.1, site, b.rate), by = 'site')
tmp <- dplyr::select(tmp, site, group, strata, numcases, numstrokes, rate, b.rate)

# tmp <- dplyr::select(tmp, stage.of.expt, group, strata, site, rate)
# tmp <- melt(tmp, id.vars = c("stage.of.expt", "group", "strata", "site"))
# tmp1 <- reshape2::dcast(tmp, group + strata + site ~ stage.of.expt)
# names(tmp1) <- tolower(names(tmp1))

# As per 10.5.1.1 (event rates)
# We fi rst fit the Poisson regression model to the data, 
# ***ignoring the intervention effect***. 

densityplot(~rate | group, data = tmp)

summary(lm1 <- lm(rate ~ b.rate + strata + group, data = tmp))
summary(lm2 <- lm(rate ~ b.rate + strata * group, data = tmp))
anova(lm1, lm2)

# Look at the model without interaction effect.
K <- rbind("Intervention effect" = c(0,0,0,0,1))
round(100*confint(glht(lm1, K))$confint[1,], 1)

# Look at the model with interaction effect.
K <- rbind("Intervention effect - strata 1" = c(0,0,0,0,1,0,0))
round(100*confint(glht(lm2, K))$confint[1,], 1)

K <- rbind("Intervention effect - strata 2" = c(0,0,0,0,1,1,0))
round(100*confint(glht(lm2, K))$confint[1,], 1)

K <- rbind("Intervention effect - strata 3" = c(0,0,0,0,1,0,1))
round(100*confint(glht(lm2, K))$confint[1,], 1)





# Modelling - mixed model without using strata effect





tmp <- df2
tmp$q <- paste0(substr(as.character(tmp$stage.of.expt), 1, 1), tmp$quarter)
tmp$q <- as.factor(tmp$q)
tmp$q <- factor(tmp$q, labels = c("0", "1", "2", "3", "4", "5", "6", "7"),
                levels = c("B0", "T9", "T10", "T11", "T12", "P13", "P14", "P15"))
tmp$rate <- tmp$numcases / tmp$numstrokes

tmp$noncases <- tmp$numstrokes -  tmp$numcases 


ddply(tmp, .(group, q), summarise, 
      n.cases = sum(numcases), 
      n.strokes = sum(numstrokes),
      rate = round(n.cases / n.strokes, 4))


# mod0<-glmmadmb(numcases ~ group + q + offset(lnumstrokes) +  (1|site), 
#                family="nbinom", zeroInflation=FALSE, data=tmp)
# summary(mod0, corr=FALSE)
# 
# mod1<-glmmadmb(numcases ~ group * q + offset(lnumstrokes) +  (1|site) , 
#                family="poisson", zeroInflation=FALSE, data=tmp)
# summary(mod1, corr=FALSE)
# 
# summary(mod1<-glmer(numcases ~ group * q + offset(lnumstrokes) +  (1|site) + (1|obs),
#                 family=poisson, data=tmp,
#                 control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e4))))
# 
# summary(mod1<-glmer(cbind(numcases, noncases)~group * q +  (1|site),
#                     data=tmp, family=binomial(link="log")))

# See: https://stat.ethz.ch/pipermail/r-sig-mixed-models/2011q1/015534.html

# ...quote:
# The most consistent definition I have found is overdispersion is defined by
# a ratio of residual scaled deviance to the residual degrees of freedom > 1.
# Which seems simple enough.

# rdev <- sum(residuals(mod1)^2)
# # Equivalently:
# rdev <- deviance(mod1)
# mdf <- length(fixef(mod1))
# rdf <- nrow(tmp)-mdf
# rdev/rdf 

# [1] 1.464385 > 1 => some overdispersion with implication that se underestimated.

# See: https://stat.ethz.ch/pipermail/r-sig-mixed-models/2011q1/015534.html

# ...continuing quote:
# So I conclude my model is overdispersed. The recent consensus solution seems
# to be to create and add a individual level random variable to the model.

# From: http://ase.tufts.edu/gsc/gradresources/guidetomixedmodelsinr/mixed%20model%20guide.html
# You can model overdispersion as a random effect, with one random effect level for each observation.
# tmp$obs <- 1:nrow(tmp) #create individual level random variable 
# summary(mod1<-glmer(cbind(numcases, noncases)~group * q +  (1|site) + (1|obs),
#                     data=tmp, family=binomial(link="log"),
#                     control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e4))))
# 
# rdev <- sum(residuals(mod1)^2)
# # Equivalently:
# rdev <- deviance(mod1)
# mdf <- length(fixef(mod1))
# rdf <- nrow(tmp)-mdf
# rdev/rdf # [1] 0.8426253 < 1 => be happy, no overdispersion.



# summary(mod1<-glmer(cbind(numcases, noncases)~group * q +  (1|site) + (1|obs),
#                     data=tmp, family=binomial(link="log"),
#                     control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e4))))


# Settled on (because John said...?) I understand neither the
# rationale nor justification.
summary(mod1<-glmer(cbind(numcases, noncases)~group * q +  (1|site),
                    data=tmp, family=binomial(link="log")))


# Altering the reference grid
lmm1.lsm <- lsmeans::lsmeans(mod1, ~ group * q, 
                             adjust = "none", 
                             infer = c(TRUE,TRUE) ) #   mode =  "satterthwaite"  "asymptotic"

# When a transformation or link function is used in tting a model, ref.grid (also called by lsmeans)
# stores that information in the returned object, as seen in this example:
str(lmm1.lsm)
# The infer argument causes both confidence intervals and tests to be produced
summary(lmm1.lsm, by = NULL, infer = c(TRUE,TRUE), type = "response")
plot(lmm1.lsm, by = NULL, type = "response")
lsmeans::lsmip(lmm1.lsm, group ~ q, ylab = "", type = "response")


s <- as.data.frame(summary(lmm1.lsm, by = NULL, 
                           infer = c(TRUE,TRUE), 
                           type = "response"))

s$prob <- round(s$prob, 4)
s$asymp.LCL <- round(s$asymp.LCL, 4)
s$asymp.UCL <- round(s$asymp.UCL, 4)

s <- s[,c("group", "q", "prob", "asymp.LCL",  "asymp.UCL")]
s <- s[order(s$group, s$q), ]

kable(s, row.names = F)


# write.dta(tmp, '../../Data/STATA/df2verif.dta')
#anova(mod0, mod1)

# K <- rbind("Baseline" = c(1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)

# K <- rbind("Baseline" = c(1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)
# K <- rbind("Baseline" = c(1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)
# K <- rbind("Baseline" = c(1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)
# K <- rbind("Baseline" = c(1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)
# K <- rbind("Baseline" = c(1,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)
# K <- rbind("Baseline" = c(1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)
# K <- rbind("Baseline" = c(1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1))
# round(exp(confint(glht(mod1, K))$confint[1,]), 4)








summary(lm0<-lm(rate ~ group + q , data=tmp))
summary(lm1<-lm(rate ~ group * q , data=tmp))
anova(lm0, lm1)

contrasts.parm1 <- function(m, exponent = F){
  # Contrasts for intervention group
  # NOTE
  # The first contrast is found by subtracting 
  # c(1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0) - c(1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
  K <- rbind("Intervention: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0))
  if (exponent == F){
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0))
  if (exponent == F){
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0))
  if (exponent == F){
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0))
  if (exponent == F){
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0))
  if (exponent == F){
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0))
  if (exponent == F){
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1))
  if (exponent == F){
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Intervention: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1))
  # if (exponent == F){
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  
  df4 <- data.frame(group = "Intervention", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  # baselinemean.itv <- mean(droplevels(subset(df2, quarter == 0 & group == "Intervention"))$rate)
  # df4$pred <- baselinemean.itv * df2$Estimate
  #df2$lwr <- baselinemean.itv * df2$lwr
  #df2$upr <- baselinemean.itv * df2$upr
  
  # Contrasts for control group
  K <- rbind("Control: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0))
  if (exponent == F){
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Control: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0))
  # if (exponent == F){
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df5 <- cbind(data.frame(group = "Control", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3)))
  
  # -------------> NOTE!!!
  # The differences between intervention and control are obtained 
  # directly from the interaction term in the model.
  
  if (exponent == F){
    estimate <- as.numeric(round(cbind(coef(m), confint(m,method="Wald")), 3)[10:16, 1])
    lwr <- as.numeric(round(cbind(coef(m), confint(m,method="Wald")), 3)[10:16, 2])
    upr <- as.numeric(round(cbind(coef(m), confint(m,method="Wald")), 3)[10:16, 3])          
  } else{
    # estimate <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald"))), 3)[11:18, 1])
    # lwr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald"))), 3)[11:18, 2])
    # upr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald"))), 3)[11:18, 3]) 
    #
    # Remove the random effect reported with confint.glmer
    estimate <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald")[-1,])), 3)[10:16, 1])
    lwr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald")[-1,])), 3)[10:16, 2])
    upr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald")[-1,])), 3)[10:16, 3])
    #
    # Remove the random effects reported with confint.glmer
    # estimate <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald")[c(-1, -2),])), 3)[11:18, 1])
    # lwr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald")[c(-1, -2),])), 3)[11:18, 2])
    # upr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald")[c(-1, -2),])), 3)[11:18, 3])
  }
  
  df6 <- data.frame(group = "Difference", timepoint = 1:7, Estimate = estimate, lwr = lwr, upr = upr)
  
  df7 <- rbind(df4, df5, df6)
  rownames(df7) <- NULL
  
  tmp1 <- df7[, c("group", "timepoint", "Estimate")]
  tmp1 <- reshape(tmp1, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  tmp2 <- df7[, c("group", "timepoint", "lwr", "upr")]
  tmp2$Estimate <- paste0("(", tmp2$lwr, " ", tmp2$upr, ")")
  tmp2 <- tmp2[, c("group", "timepoint", "Estimate")]
  tmp2 <- reshape(tmp2, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  df8 <- rbind(tmp1, tmp2)
  df8 <- df8[order(df8$group),]
  list(df8, df7)
}

# Risk ratios 
df8 <- contrasts.parm1(mod1, T)[[1]]

# This creates a starting point and I manually fiddle around with the latex 
# from here to get the formatting as I want it.
print(xtable(df8, digits = 3), include.rownames = FALSE)

# Readable for checking:
kable(df8, digits=2)

# Plot that is equivalent to the table.
df8 <- contrasts.parm1(mod1, T)[[2]]
df8$stage <- ifelse(df8$timepoint <= 4, "Intervention Period", "Post-Intervention Period")
df8 <- droplevels(subset(df8, group != "Difference"))
df8$timepoint <- ifelse(df8$timepoint > 4, df8$timepoint - 4, df8$timepoint)
df8$group <- factor(df8$group, levels = c("Control", "Intervention"))

df8$q.stage <- paste0(substr(df8$stage,start = 1, stop = 1), df8$timepoint)
df8$q.stage <- as.factor(df8$q.stage)


g <- df8

# g$stage <- factor(g$stage,
#                   labels = c("Post-Intervention", "Intervention"),
#                   levels = c("Post-Intervention Period", "Intervention Period"))


p <- ggplot(g, aes(x=q.stage, y=Estimate, colour = group)) 
p <- p + geom_point(position=position_dodge(width=0.3))
p <- p + geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr), 
                       position=position_dodge(width=0.3)) 
p <- p + geom_hline(yintercept = 1)
p <- p + theme(text = element_text(size=10))
p <- p + xlab("Timepoint (Intervention & Post)")
p <- p + ylab("Change from baseline thrombolysis \n rate ratio (95% CI)")
p <- p + theme(legend.position="bottom")
p <- p + theme(legend.title=element_blank())
p
























# 2018-05-19 New plot for Chris, Annika et al.
# Use size = 10 for 640 plot
# Use size = 14 for 1063 plot




p <- ggplot(g, aes(x=q.stage, y=Estimate, colour = group)) + 
  geom_point(position=position_dodge(width=0.3)) + 
  geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr), 
                position=position_dodge(width=0.3)) + 
  geom_hline(yintercept = 1) + 
  theme_bw() + 
  theme(text = element_text(size=10,  family="serif")) + 
  theme(legend.title=element_blank()) + 
  theme(legend.position="bottom") + 
  xlab("Timepoint (Intervention & Post)") + 
  ylab("Change from baseline thrombolysis \n rate ratio (95% CI)")  

p


ggsave("../../Output/manuscript-fig-04.pdf", p, 
       width = 107, height = 107, units = "mm", dpi = 300)

ggsave("../../Output/manuscript-fig-04.tiff", p, 
       width = 107, height = 107, units = "mm", dpi = 300)


library(Cairo)
cairo_ps("../../Output/manuscript-fig-04.eps", family = "Times",
         width = 4.2126, height = 4.2126)
plot(p)
dev.off()




# Risk diffs 
df8 <- contrasts.parm1(lm1, F)[[1]]

# This creates a starting point and I manually fiddle around with the latex 
# from here to get the formatting as I want it.
print(xtable(df8, digits = 3), include.rownames = FALSE)

# Readable for checking:
kable(df8, digits=2)


# Plot that is equivalent to the table.
df8 <- contrasts.parm1(lm1, F)[[2]]
df8$stage <- ifelse(df8$timepoint <= 4, "Intervention Period", "Post-Intervention Period")
df8 <- droplevels(subset(df8, group != "Difference"))
df8$timepoint <- ifelse(df8$timepoint > 4, df8$timepoint - 4, df8$timepoint)
df8$group <- relevel(df8$group, ref = "Control")

df8$q.stage <- paste0(substr(df8$stage,start = 1, stop = 1), df8$timepoint)
df8$q.stage <- as.factor(df8$q.stage)

g <- df8

# g$stage <- factor(g$stage,
#                   labels = c("Post-Intervention", "Intervention"),
#                   levels = c("Post-Intervention Period", "Intervention Period"))



p <- ggplot(g, aes(x=q.stage, y=Estimate, colour = group)) 
p <- p + geom_point(position=position_dodge(width=0.3))
p <- p + geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr), 
                       position=position_dodge(width=0.3)) 
p <- p + geom_hline(yintercept = 0)
p <- p + theme(text = element_text(size=10))
p <- p + xlab("Timepoint (Intervention & Post)")
p <- p + ylab("Change from baseline thrombolysis \n rate difference (95% CI)")
p <- p + theme(legend.position="bottom")
p <- p + theme(legend.title=element_blank())
p








# Model 2 - Modelling - mixed model with strata effect





# tmp <- df2
# tmp$q <- paste0(substr(as.character(tmp$stage.of.expt), 1, 1), tmp$quarter)
# tmp$q <- as.factor(tmp$q)
# tmp$q <- factor(tmp$q, labels = c("0", "1", "2", "3", "4", "5", "6", "7", "8"),
#                 levels = c("B0", "T1", "T2", "T3", "T4", "P1", "P2", "P3", "P4"))
# tmp$rate <- tmp$numcases / tmp$numstrokes
# 
# 
# 
# # mod1b<-glmmadmb(numcases ~ group * q + strata + offset(lnumstrokes) +  (1|site), 
# #                family="nbinom", zeroInflation=FALSE, data=tmp)
# # summary(mod1b, corr=FALSE)
# 
# 
# 
# summary(lm0b<-lm(rate ~ group + q + strata, data=tmp))
# summary(lm1b<-lm(rate ~ group * q + strata, data=tmp))
# anova(lm0b, lm1b)
# 
# contrasts.parm1b <- function(m, exponent = F){
#   # Contrasts for intervention group
#   K <- rbind("Intervention: Baseline to Q1" = c(0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q1 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q1 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q2" = c(0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0))
#   if (exponent == F){
#     q2 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q2 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0))
#   if (exponent == F){
#     q3 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q3 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0))
#   if (exponent == F){
#     q4 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q4 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0))
#   if (exponent == F){
#     q5 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q5 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0))
#   if (exponent == F){
#     q6 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q6 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0))
#   if (exponent == F){
#     q7 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q7 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Intervention: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1))
#   if (exponent == F){
#     q8 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q8 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   
#   
#   df4 <- data.frame(group = "Intervention", quarter = 1:8, round(rbind(q1, q2, q3, q4, q5, q6, q7, q8), 3))
#   # baselinemean.itv <- mean(droplevels(subset(df2, quarter == 0 & group == "Intervention"))$rate)
#   # df4$pred <- baselinemean.itv * df2$Estimate
#   #df2$lwr <- baselinemean.itv * df2$lwr
#   #df2$upr <- baselinemean.itv * df2$upr
#   
#   # Contrasts for control group
#   K <- rbind("Control: Baseline to Q1" = c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q1 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q1 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q2" = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q2 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q2 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q3 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q3 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q4 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q4 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q5 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q5 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q6 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q6 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q7 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q7 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   K <- rbind("Control: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0))
#   if (exponent == F){
#     q8 <- confint(glht(m, K))$confint[1,]
#   } else {
#     q8 <- exp(confint(glht(m, K))$confint[1,])
#   }
#   
#   df5 <- cbind(data.frame(group = "Control", quarter = 1:8, round(rbind(q1, q2, q3, q4, q5, q6, q7, q8), 3)))
#   
#   # -------------> NOTE!!!
#   # The differences between intervention and control are obtained 
#   # directly from the interaction term in the model.
#   
#   if (exponent == F){
#     estimate <- as.numeric(round(cbind(coef(m), confint(m,method="Wald")), 3)[13:20, 1])
#     lwr <- as.numeric(round(cbind(coef(m), confint(m,method="Wald")), 3)[13:20, 2])
#     upr <- as.numeric(round(cbind(coef(m), confint(m,method="Wald")), 3)[13:20, 3])          
#   } else{
#     estimate <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald"))), 3)[13:20, 1])
#     lwr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald"))), 3)[13:20, 2])
#     upr <- as.numeric(round(exp(cbind(fixed.effects(m), confint(m,method="Wald"))), 3)[13:20, 3]) 
#   }
#   
#   df6 <- data.frame(group = "Difference", quarter = 1:8, Estimate = estimate, lwr = lwr, upr = upr)
#   
#   df7 <- rbind(df4, df5, df6)
#   rownames(df7) <- NULL
#   
#   tmp1 <- df7[, c("group", "quarter", "Estimate")]
#   tmp1 <- reshape(tmp1, timevar = "quarter", idvar = c("group"), direction = "wide")
#   
#   tmp2 <- df7[, c("group", "quarter", "lwr", "upr")]
#   tmp2$Estimate <- paste0("(", tmp2$lwr, " ", tmp2$upr, ")")
#   tmp2 <- tmp2[, c("group", "quarter", "Estimate")]
#   tmp2 <- reshape(tmp2, timevar = "quarter", idvar = c("group"), direction = "wide")
#   
#   df8 <- rbind(tmp1, tmp2)
#   df8 <- df8[order(df8$group),]
#   list(df8, df7)
# }
# 
# # Risk ratios 
# df8 <- contrasts.parm1b(mod1b, T)[[1]]
# 
# # This creates a starting point and I manually fiddle around with the latex 
# # from here to get the formatting as I want it.
# print(xtable(df8, digits = 3), include.rownames = FALSE)
# 
# # Readable for checking:
# kable(df8, digits=2)
# 
# 
# # Plot that is equivalent to the table.
# df8 <- contrasts.parm1b(mod1b, T)[[2]]
# df8$stage <- ifelse(df8$quarter <= 4, "Intervention Period", "Post-Intervention Period")
# df8 <- droplevels(subset(df8, group != "Difference"))
# df8$quarter <- ifelse(df8$quarter > 4, df8$quarter - 4, df8$quarter)
# df8$quarter <- ifelse(df8$group == "Intervention", df8$quarter + 0.2, df8$quarter - 0.2)
# df8$group <- relevel(df8$group, ref = "Control")
# 
# p <- ggplot(df8, aes(x=quarter, y=Estimate, colour = group)) 
# p <- p + geom_point()
# p <- p + geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr)) 
# p <- p + geom_hline(yintercept = 1)
# p <- p + theme(text = element_text(size=10))
# p <- p + xlab("Quarter")
# p <- p + ylab("Change from baseline thrombolysis rate ratio (95% CI)")
# p <- p + theme(legend.position="bottom")
# p <- p + theme(legend.title=element_blank())
# p <- p + facet_grid( ~ stage)
# p <- p + coord_flip()
# p
# 
# 
# 
# 
# 
# 
# # Risk diffs 
# df8 <- contrasts.parm1b(lm1b, F)[[1]]
# 
# # This creates a starting point and I manually fiddle around with the latex 
# # from here to get the formatting as I want it.
# print(xtable(df8, digits = 3), include.rownames = FALSE)
# 
# # Readable for checking:
# kable(df8, digits=2)
# 
# 
# # Plot that is equivalent to the table.
# df8 <- contrasts.parm1b(lm1b, F)[[2]]
# df8$stage <- ifelse(df8$quarter <= 4, "Intervention Period", "Post-Intervention Period")
# df8 <- droplevels(subset(df8, group != "Difference"))
# df8$quarter <- ifelse(df8$quarter > 4, df8$quarter - 4, df8$quarter)
# df8$quarter <- ifelse(df8$group == "Intervention", df8$quarter + 0.2, df8$quarter - 0.2)
# df8$group <- relevel(df8$group, ref = "Control")
# 
# p <- ggplot(df8, aes(x=quarter, y=Estimate, colour = group)) 
# p <- p + geom_point()
# p <- p + geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr)) 
# p <- p + geom_hline(yintercept = 0)
# p <- p + theme(text = element_text(size=10))
# p <- p + xlab("Quarter")
# p <- p + ylab("Change from baseline thrombolysis rate difference (95% CI)")
# p <- p + theme(legend.position="bottom")
# p <- p + theme(legend.title=element_blank())
# p <- p + facet_grid( ~ stage)
# p <- p + coord_flip()
# p





# Model 3 - Modelling - mixed model with strata effect and 3-way interaction
# Note that in these models quarter 0 replaces (or is) the 'baseline adjustment'





tmp <- df2
tmp$q <- paste0(substr(as.character(tmp$stage.of.expt), 1, 1), tmp$quarter)
tmp$q <- as.factor(tmp$q)
tmp$q <- factor(tmp$q, labels = c("0", "1", "2", "3", "4", "5", "6", "7"),
                levels = c("B0", "T9", "T10", "T11", "T12", "P13", "P14", "P15"))
tmp$rate <- tmp$numcases / tmp$numstrokes
tmp$noncases <- tmp$numstrokes -  tmp$numcases 
# mod0<-glmmadmb(numcases ~ group + q + strata + offset(lnumstrokes) +  (1|site), 
#                family="nbinom", zeroInflation=FALSE, data=tmp)
# summary(mod0, corr=FALSE)

# mod2<-glmmadmb(numcases ~ group * q + strata + offset(lnumstrokes) +  (1|site), 
#                family="nbinom", zeroInflation=FALSE, data=tmp)
# summary(mod2, corr=FALSE)

# mod2<-glmmadmb(numcases ~ group * q * strata + offset(lnumstrokes) +  (1|site), 
#                family="nbinom", zeroInflation=FALSE, data=tmp)

# Settled on (because John said...?) I understand neither the
# rationale nor justification.
summary(mod2<-glmer(cbind(numcases, noncases)~group * q * strata +  (1|site),
                    data=tmp, family=binomial(link="log"),
                    glmerControl(optimizer="optimx",optCtrl=list(method="nlminb"))))

# library(nloptr)
# ## from https://github.com/lme4/lme4/issues/98:
# defaultControl <- list(algorithm="NLOPT_LN_BOBYQA",xtol_rel=1e-6,maxeval=1e5)
# nloptwrap2 <- function(fn,par,lower,upper,control=list(),...) {
#   for (n in names(defaultControl)) 
#     if (is.null(control[[n]])) control[[n]] <- defaultControl[[n]]
#     res <- nloptr(x0=par,eval_f=fn,lb=lower,ub=upper,opts=control,...)
#     with(res,list(par=solution,
#                   fval=objective,
#                   feval=iterations,
#                   conv=if (status>0) 0 else status,
#                   message=message))
# }
# # CONVERGES AND GIVES IDENTICAL ESTIMATES
# summary(mod2<-glmer(cbind(numcases, noncases)~group * q * strata +  (1|site),
#                     data=tmp, family=binomial(link="log"),
#                     glmerControl(optimizer=nloptwrap2)))



summary(mod2, corr=FALSE)

#anova(mod0, mod2)


summary(lm2<-lm(rate ~ group * q * strata , data=tmp))



# Strata 1



contrasts.parm2.1 <- function(m, exponent = F){
  # Contrasts for intervention group
  K <- rbind("Intervention: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Intervention: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  # if (exponent == F){
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df4 <- data.frame(group = "Intervention", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Contrasts for control group
  K <- rbind("Control: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Control: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  # if (exponent == F) {
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df5 <- data.frame(group = "Control", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Contrasts for Diff bw intv and control group
  K <- rbind("Diff: Baseline to T1" = c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T2" = c(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T3" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T4" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T5" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T6" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T7" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Diff: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  # if (exponent == F) {
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])  
  # }
  
  df6 <- data.frame(group = "Diff", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Combine
  df7 <- rbind(df4, df5, df6)
  rownames(df7) <- NULL
  
  tmp1 <- df7[, c("group", "timepoint", "Estimate")]
  tmp1 <- reshape(tmp1, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  tmp2 <- df7[, c("group", "timepoint", "lwr", "upr")]
  tmp2$Estimate <- paste0("(", tmp2$lwr, " ", tmp2$upr, ")")
  tmp2 <- tmp2[, c("group", "timepoint", "Estimate")]
  tmp2 <- reshape(tmp2, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  df8 <- rbind(tmp1, tmp2)
  df8 <- df8[order(df8$group),]
  
  list(df8, df7)
  
}



# Strata 2




contrasts.parm2.2 <- function(m, exponent = F){
  # Contrasts for intervention group
  K <- rbind("Intervention: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0))
  if (exponent == F){
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0))
  if (exponent == F){
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Intervention: Baseline to T8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0))
  # if (exponent == F){
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df4 <- data.frame(group = "Intervention", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Contrasts for control group
  K <- rbind("Control: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Control: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  # if (exponent == F) {
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df5 <- data.frame(group = "Control", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Contrasts for Diff bw intv and control group
  K <- rbind("Diff: Baseline to T1" = c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T2" = c(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T3" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T4" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T5" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T6" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T7" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0))
  if (exponent == F) {
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Diff: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0))
  # if (exponent == F) {
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])  
  # }
  
  df6 <- data.frame(group = "Diff", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Combine
  df7 <- rbind(df4, df5, df6)
  rownames(df7) <- NULL
  
  tmp1 <- df7[, c("group", "timepoint", "Estimate")]
  tmp1 <- reshape(tmp1, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  tmp2 <- df7[, c("group", "timepoint", "lwr", "upr")]
  tmp2$Estimate <- paste0("(", tmp2$lwr, " ", tmp2$upr, ")")
  tmp2 <- tmp2[, c("group", "timepoint", "Estimate")]
  tmp2 <- reshape(tmp2, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  df8 <- rbind(tmp1, tmp2)
  df8 <- df8[order(df8$group),]
  
  list(df8, df7)
  
}



# Strata 3 - is it dubious to be working out estimates for this strata??? CO suggested it was...




contrasts.parm2.3 <- function(m, exponent = F){
  # Contrasts for intervention group
  K <- rbind("Intervention: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0))
  if (exponent == F){
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0))
  if (exponent == F){
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0))
  if (exponent == F){
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0))
  if (exponent == F){
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0))
  if (exponent == F){
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
  if (exponent == F){
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Intervention: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
  if (exponent == F){
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Intervention: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
  # if (exponent == F){
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df4 <- data.frame(group = "Intervention", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Contrasts for control group
  K <- rbind("Control: Baseline to T1" = c(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T2" = c(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T3" = c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T4" = c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T5" = c(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T6" = c(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Control: Baseline to T7" = c(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  if (exponent == F) {
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Control: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
  # if (exponent == F) {
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])
  # }
  
  df5 <- data.frame(group = "Control", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Contrasts for Diff bw intv and control group
  K <- rbind("Diff: Baseline to T1" = c(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0))
  if (exponent == F) {
    q1 <- confint(glht(m, K))$confint[1,]
  } else {
    q1 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T2" = c(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0))
  if (exponent == F) {
    q2 <- confint(glht(m, K))$confint[1,]
  } else {
    q2 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T3" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0))
  if (exponent == F) {
    q3 <- confint(glht(m, K))$confint[1,]
  } else {
    q3 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T4" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0))
  if (exponent == F) {
    q4 <- confint(glht(m, K))$confint[1,]
  } else {
    q4 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T5" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0))
  if (exponent == F) {
    q5 <- confint(glht(m, K))$confint[1,]
  } else {
    q5 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T6" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0))
  if (exponent == F) {
    q6 <- confint(glht(m, K))$confint[1,]
  } else {
    q6 <- exp(confint(glht(m, K))$confint[1,])
  }
  K <- rbind("Diff: Baseline to T7" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
  if (exponent == F) {
    q7 <- confint(glht(m, K))$confint[1,]
  } else {
    q7 <- exp(confint(glht(m, K))$confint[1,])
  }
  # K <- rbind("Diff: Baseline to Q8" = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
  # if (exponent == F) {
  #   q8 <- confint(glht(m, K))$confint[1,]
  # } else {
  #   q8 <- exp(confint(glht(m, K))$confint[1,])  
  # }
  
  df6 <- data.frame(group = "Diff", timepoint = 1:7, round(rbind(q1, q2, q3, q4, q5, q6, q7), 3))
  
  # Combine
  df7 <- rbind(df4, df5, df6)
  rownames(df7) <- NULL
  
  tmp1 <- df7[, c("group", "timepoint", "Estimate")]
  tmp1 <- reshape(tmp1, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  tmp2 <- df7[, c("group", "timepoint", "lwr", "upr")]
  tmp2$Estimate <- paste0("(", tmp2$lwr, " ", tmp2$upr, ")")
  tmp2 <- tmp2[, c("group", "timepoint", "Estimate")]
  tmp2 <- reshape(tmp2, timevar = "timepoint", idvar = c("group"), direction = "wide")
  
  df8 <- rbind(tmp1, tmp2)
  df8 <- df8[order(df8$group),]
  
  list(df8, df7)
  
}


# Risk ratios 
df8.1 <- contrasts.parm2.1(mod2, T)[[1]]
df8.1$strata <- 1
df8.2 <- contrasts.parm2.2(mod2, T)[[1]]
df8.2$strata <- 2
df8.3 <- contrasts.parm2.3(mod2, T)[[1]]
df8.3$strata <- 3

df8 <- rbind(df8.1, df8.2, df8.3)
rownames(df8) <- NULL
df8 <- df8[,c(9, 1:8)]

# This creates a starting point and I manually fiddle around with the latex 
# from here to get the formatting as I want it.
print(xtable(df8, digits = 3), include.rownames = FALSE)

# Readable for checking:
kable(df8, digits=2)


# Plots
df7.1 <- contrasts.parm2.1(mod2, T)[[2]]   
df7.2 <- contrasts.parm2.2(mod2, T)[[2]]  
df7.3 <- contrasts.parm2.3(mod2, T)[[2]]

# Plot that is equivalent to the table.
df7.1$strata <- 1
df7.2$strata <- 2
df7.3$strata <- 3

df7 <- rbind(df7.1, df7.2, df7.3)
rownames(df7) <- NULL

df7$stage <- ifelse(df7$timepoint <= 4, "Intervention Period", "Post-Intervention Period")
df7 <- droplevels(subset(df7, group != "Diff"))
df7$timepoint <- ifelse(df7$timepoint > 4, df7$timepoint - 4, df7$timepoint)
# df7$timepoint <- ifelse(df7$group == "Intervention", df7$timepoint + 0.2, df7$timepoint - 0.2)
df7$group <- relevel(df7$group, ref = "Control")
df7$strata <- as.factor(df7$strata)
df7$strata <- factor(df7$strata, labels = paste0("Strata ", 1:3), levels = 1:3)

df7$q.stage <- paste0(substr(df7$stage,start = 1, stop = 1), df7$timepoint)
df7$q.stage <- as.factor(df7$q.stage)

g <- df7

# g$stage <- factor(g$stage,
#                   labels = c("Post-Intervention", "Intervention"),
#                   levels = c("Post-Intervention Period", "Intervention Period"))



p <- ggplot(g, aes(x=q.stage, y=Estimate, colour = group)) 
p <- p + geom_point(position=position_dodge(width=0.3))
p <- p + geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr), 
                       position=position_dodge(width=0.3)) 
p <- p + geom_hline(yintercept = 1)
p <- p + theme(text = element_text(size=10))
p <- p + xlab("Timepoint (Intervention & Post)")
p <- p + ylab("Change from baseline thrombolysis \n rate ratio (95% CI)")
p <- p + theme(legend.position="bottom")
p <- p + theme(legend.title=element_blank())
p <- p + facet_grid(. ~ strata)
p



# Risk differences 
df8.1 <- contrasts.parm2.1(lm2, F)[[1]]
df8.1$strata <- 1
df8.2 <- contrasts.parm2.2(lm2, F)[[1]]
df8.2$strata <- 2
df8.3 <- contrasts.parm2.3(lm2, F)[[1]]
df8.3$strata <- 3

df8 <- rbind(df8.1, df8.2, df8.3)
rownames(df8) <- NULL
df8 <- df8[,c(9, 1:8)]

# This creates a starting point and I manually fiddle around with the latex 
# from here to get the formatting as I want it.
print(xtable(df8, digits = 3), include.rownames = FALSE)

# Readable for checking:
kable(df8, digits=2)


# Plots
df7.1 <- contrasts.parm2.1(lm2, F)[[2]]   
df7.2 <- contrasts.parm2.2(lm2, F)[[2]]  
df7.3 <- contrasts.parm2.3(lm2, F)[[2]]

# Plot that is equivalent to the table.
df7.1$strata <- 1
df7.2$strata <- 2
df7.3$strata <- 3

df7 <- rbind(df7.1, df7.2, df7.3)
rownames(df7) <- NULL

df7$stage <- ifelse(df7$timepoint <= 4, "Intervention Period", "Post-Intervention Period")
df7 <- droplevels(subset(df7, group != "Diff"))
df7$timepoint <- ifelse(df7$timepoint > 4, df7$timepoint - 4, df7$timepoint)
# df7$timepoint <- ifelse(df7$group == "Intervention", df7$timepoint + 0.2, df7$timepoint - 0.2)
df7$group <- relevel(df7$group, ref = "Control")
df7$strata <- as.factor(df7$strata)
df7$strata <- factor(df7$strata, labels = paste0("Strata ", 1:3), levels = 1:3)



df7$q.stage <- paste0(substr(df7$stage,start = 1, stop = 1), df7$timepoint)
df7$q.stage <- as.factor(df7$q.stage)

g <- df7

p <- ggplot(g, aes(x=q.stage, y=Estimate, colour = group)) 
p <- p + geom_point(position=position_dodge(width=0.3))
p <- p + geom_errorbar(width=.1, aes(ymin=lwr, ymax=upr), 
                       position=position_dodge(width=0.3)) 
p <- p + geom_hline(yintercept = 0)
p <- p + theme(text = element_text(size=10))
p <- p + xlab("Timepoint (Intervention & Post)")
p <- p + ylab("Change from baseline thrombolysis \n rate ratio (95% CI)")
p <- p + theme(legend.position="bottom")
p <- p + theme(legend.title=element_blank())
p <- p + facet_grid(. ~ strata)
p




# Time to needle stuff.

descriptives()
time.to.needle()





# SEGMENTED REGRESSION 








tmp <- df2
tmp$rate <- tmp$numcases / tmp$numstrokes
tmp$noncases <- tmp$numstrokes -  tmp$numcases 

tmp$q.int <- ifelse(tmp$quarter %in% 9:12 & tmp$stage.of.expt == "Treatment", tmp$quarter-8, 0)
tmp$q.post <- ifelse(tmp$quarter %in% 13:15 & tmp$stage.of.expt == "Post", tmp$quarter-8, 0)

tmp$q.all <- ifelse(tmp$quarter %in% 9:12 & tmp$stage.of.expt == "Treatment", tmp$quarter-8, 0)
tmp$q.all <- ifelse(tmp$stage.of.expt == "Baseline", 0, tmp$q.all)
tmp$q.all <- ifelse(tmp$quarter %in% 13:15 & tmp$stage.of.expt == "Post", tmp$quarter-8, tmp$q.all)

tmp$stage.of.expt <- factor(tmp$stage.of.expt, levels = c("Baseline", "Treatment", "Post"))
# tmp2 <- subset(tmp, stage.of.expt %in% c("Baseline", "Treatment"))

summary(lm1 <- lm(rate ~ stage.of.expt + group + q.int + group:q.int  + q.post + group:q.post, data = tmp))
tmp$pred <- predict(lm1)


# Settled on (because John said...?) I understand neither the
# rationale nor justification.
summary(mod1<-glmer(cbind(numcases, noncases) ~ stage.of.expt + group + 
                      q.int + group:q.int  + q.post + group:q.post +  (1|site),
                    data=tmp, family=binomial(link="log"),
                    glmerControl(optimizer="optimx",optCtrl=list(method="nlminb"))))
summary(mod1)

model.df <- data.frame(name = names(fixed.effects(mod1)), 
                       param = fixed.effects(mod1), 
                       lwr = confint(mod1, method = "Wald")[-1,1], 
                       upr = confint(mod1, method = "Wald")[-1,2])
rownames(model.df) <- NULL

print(xtable(model.df, digits = 3), include.rownames = FALSE)
kable(model.df, digits=2)




# write.dta(tmp, '../../Data/STATA/df2verif.dta')
#anova(mod0, mod1)
tmp$pred <- predict(mod1, type = "response")


new.df <- data.frame(stage.of.expt = rep("Treatment", 4), 
                     group = rep("Control", 4), 
                     q.int = c(1:4), 
                     q.post = rep(0, 4))
new.df <- rbind(new.df, data.frame(stage.of.expt = rep("Post", 3), 
                                   group = rep("Control", 3), 
                                   q.int = rep(0, 3), 
                                   q.post = 1:3))
new.df <- rbind(new.df, data.frame(stage.of.expt = rep("Treatment", 4), 
                                   group = rep("Intervention", 4), 
                                   q.int = 1:4, 
                                   q.post = rep(0, 4)))
new.df <- rbind(new.df, data.frame(stage.of.expt = rep("Post", 3), 
                                   group = rep("Intervention", 3), 
                                   q.int = rep(0, 3), 
                                   q.post = 1:3))
new.df <- rbind(new.df, data.frame(stage.of.expt = rep("Baseline", 2), 
                                   group = c("Intervention", "Control"), 
                                   q.int = c(0, 0), 
                                   q.post = c(0, 0)))

new.df$stage.of.expt <- factor(new.df$stage.of.expt, 
                               levels = c("Baseline", "Treatment", "Post"))


# Predict the marginal - i.e. ignoring random effect
new.df$pred <- predict(mod1, newdata = new.df, type = "response", allow.new.levels=TRUE,re.form=NA)
new.df$q <- c(rep(1:7, times = 2), 0, 0)
new.df <- new.df[order(new.df$stage.of.expt),]

tmp.0 <- subset(new.df, q %in% 0)
tmp.1 <- subset(new.df, q %in% 1:4)
tmp.2 <- subset(new.df, q %in% 5:7)

p <- ggplot(tmp.0, aes(x = q, y = pred, group = group, colour = group))
p <- p + geom_point()
p <- p + geom_point(data = tmp.1, aes(x = q, y = pred, group = group, colour = group))
p <- p + geom_line(data = tmp.1, aes(x = q, y = pred, group = group, colour = group))
p <- p + geom_point(data = tmp.2, aes(x = q, y = pred, group = group, colour = group))
p <- p + geom_line(data = tmp.2, aes(x = q, y = pred, group = group, colour = group))
p <- p + xlab("Timepoint") 
p <- p + ylab("Predicted rate") 
p <- p + theme(legend.position="bottom")
p <- p + theme(text = element_text(size=10))
p

m <- mod1
summary(m)
exp(fixed.effects(m))

# (Intercept)              -3.22471    0.23754 -13.575  < 2e-16 ***
# stage.of.exptTreatment    0.42230    0.11794   3.581 0.000343 ***
# stage.of.exptPost         0.51924    0.11961   4.341 1.42e-05 ***
# groupIntervention         0.02133    0.33365   0.064 0.949018    
# q.int                    -0.01493    0.04102  -0.364 0.715908    
# q.post                   -0.08005    0.04695  -1.705 0.088217 .  
# groupIntervention:q.int   0.04280    0.03440   1.244 0.213524    
# groupIntervention:q.post  0.04221    0.04173   1.011 0.311809    

K <- rbind("Intervention Q0" = c(1,0,0,1,0,0,0,0))
q0.1 <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Control Q0" = c(1,0,0,0,0,0,0,0))
q0.2 <- exp(confint(glht(m, K))$confint[1,])

tmp.0 <- data.frame(group = c("Intervention", "Control"), quarter = 0, round(rbind(q0.1, q0.2), 3))

K <- rbind("Intervention Q1" = c(1,1,0,1,1,0,1,0))
q1 <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Intervention Q2" = c(1,1,0,1,2,0,2,0))
q2 <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Intervention Q3" = c(1,1,0,1,3,0,3,0))
q3 <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Intervention Q4" = c(1,1,0,1,4,0,4,0))
q4 <- exp(confint(glht(m, K))$confint[1,])

K <- rbind("Control Q1" = c(1,1,0,0,1,0,0,0))
q1c <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Control Q2" = c(1,1,0,0,2,0,0,0))
q2c <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Control Q3" = c(1,1,0,0,3,0,0,0))
q3c <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Control Q4" = c(1,1,0,0,4,0,0,0))
q4c <- exp(confint(glht(m, K))$confint[1,])

tmp.1 <- data.frame(group = c(rep("Intervention", 4), rep("Control", 4)),
                    quarter = c(1:4, 1:4), round(rbind(q1, q2, q3, q4, q1c, q2c, q3c, q4c), 3))

K <- rbind("Intervention Q5" = c(1,0,1,1,0,1,0,1))
q5 <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Intervention Q6" = c(1,0,1,1,0,2,0,2))
q6 <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Intervention Q7" = c(1,0,1,1,0,3,0,3))
q7 <- exp(confint(glht(m, K))$confint[1,])

K <- rbind("Control Q5" = c(1,0,1,0,0,1,0,0))
q5c <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Control Q6" = c(1,0,1,0,0,2,0,0))
q6c <- exp(confint(glht(m, K))$confint[1,])
K <- rbind("Control Q7" = c(1,0,1,0,0,3,0,0))
q7c <- exp(confint(glht(m, K))$confint[1,])


tmp.2 <- data.frame(group = c(rep("Intervention", 3), rep("Control", 3)),
                    quarter = c(5:7, 5:7), round(rbind(q5, q6, q7, q5c, q6c, q7c), 3))


p <- ggplot(tmp.0, aes(x = quarter, y = Estimate, group = group, colour = group))
p <- p + geom_point()
p <- p + geom_point(data = tmp.1, aes(x = quarter, y = Estimate, group = group, colour = group))
p <- p + geom_ribbon(data = tmp.1, aes(ymin = lwr, ymax = upr, group = group, fill = group), alpha = 0.1) 
p <- p + geom_line(data = tmp.1, aes(x = quarter, y = Estimate, group = group, colour = group))
p <- p + geom_point(data = tmp.2, aes(x = quarter, y = Estimate, group = group, colour = group))
p <- p + geom_ribbon(data = tmp.2, aes(ymin = lwr, ymax = upr, group = group, fill = group), alpha = 0.1) 
p <- p + geom_line(data = tmp.2, aes(x = quarter, y = Estimate, group = group, colour = group))
p <- p + xlab("Timepoint") 
p <- p + ylab("Predicted Thrombolysis Rate") 
p <- p + theme(legend.position="bottom")
p <- p + theme(text = element_text(size=10))
#p <- p + ylim(0, 0.125)
p

# new.df2 <- rbind(tmp.0,tmp.1,tmp.2)
# new.df2 <- new.df2[order(new.df2$stage.of.expt),]
